e2eTest: &e2eTest
  machine: true
  working_directory: /home/circleci/.go_workspace/src/github.com/giantswarm/app-operator
  steps:
    - checkout

    - attach_workspace:
        at: .

    - run:
        name: Get e2ectl binary
        command: |
          wget -q $(curl -sS https://api.github.com/repos/giantswarm/e2ectl/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
          chmod +x ./e2ectl

    - run:
        name: Get kubectl binary
        command: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
          chmod +x ./kubectl

    - run:
        name: Init cluster
        command: |
          ./e2ectl cluster create
          cp $(./e2ectl kubeconfig path) ${E2E_TEST_DIR}/kubeconfig
          export KUBECONFIG=$(./e2ectl kubeconfig path)

    - run:
        name: Run test
        command: |
          docker run --rm --network host \
            -v $(pwd)/${E2E_TEST_DIR}:/e2e \
            -v $(pwd):/go/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} \
            -e E2E_KUBECONFIG=/e2e/kubeconfig \
            -e CIRCLE_SHA1=${CIRCLE_SHA1} \
            -w /go/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} \
            golang:1 go test -v -tags k8srequired ./${E2E_TEST_DIR}/

    - run:
        name: Debug
        command: |
          export KUBECONFIG=$(./e2ectl kubeconfig path)
          ./kubectl describe rs -n kube-system
          ./kubectl describe rs -n giantswarm
          ./kubectl describe podsecuritypolicies
        when: always

    - run:
        name: Export logs
        command: |
          ./e2ectl logs export --logs-dir=kind/logs
        when: always

    - store_artifacts:
        path: kind/logs
        destination: logs

    - run:
        name: Finish with cleanup, no matter if the test succeeded or not
        command: ./e2ectl cluster delete
        when: always

version: 2
jobs:
  build:
    machine: true
    steps:
    - checkout

    - run: |
        wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
        chmod +x ./architect
        ./architect version
    - run: ./architect build
    - store_test_results:
        path: /tmp/results
    - deploy:
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            ./architect deploy
          fi


  e2eTestAppBasic:
    environment:
      E2E_TEST_DIR: "integration/test/app/basic"
    <<: *e2eTest

  e2eTestAppKubeConfig:
    environment:
      E2E_TEST_DIR: "integration/test/app/kubeconfig"
    <<: *e2eTest

workflows:
  version: 2
  build_e2e:
    jobs:
      - build

      - e2eTestAppBasic:
          requires:
            - build

      - e2eTestAppKubeConfig:
          requires:
            - build
